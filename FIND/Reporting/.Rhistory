require(sf)
if (!requireNamespace("dplyr", quietly=TRUE)) install.packages("dplyr")
require(dplyr)
if (!requireNamespace("RCurl", quietly=TRUE)) install.packages("RCurl")
require(RCurl)
if (!requireNamespace("data.table", quietly=TRUE)) install.packages("data.table")
require(data.table)
if (!requireNamespace("rgdal", quietly=TRUE)) install.packages("rgdal")
require(rgdal)
# set path to bonap image folder, image geodatabase, county centroids.
image_folder <- 'H:/Projects/MOBI/BONAP/bonap_originalss'
image_gdb <- 'H:/Projects/MOBI/BONAP/bonap_rasters.gdb'
county_centroids <- 'H:/Projects/MOBI/BONAP/bonap.gdb/county_centroids'
et <- 'H:/Projects/MOBI/BONAP/PLANT_LIST_MOBI_JULY2018.csv'
url_base <- 'http://bonap.net/MapGallery/County/'
projection_file <- 'H:/Projects/MOBI/BONAP/bonap_projection'
et_download <- read.csv(et)
gnames <- et_download$GNAME
not_downloaded <- data.frame(species=character())
View(et_download)
# set path to bonap image folder, image geodatabase, county centroids.
image_folder <- 'H:/Projects/MOBI/BONAP/bonap_originalss'
image_gdb <- 'H:/Projects/MOBI/BONAP/bonap_rasters.gdb'
county_centroids <- 'H:/Projects/MOBI/BONAP/bonap.gdb/county_centroids'
et <- 'H:/Projects/MOBI/BONAP/PLANT_LIST_MOBI_JULY2018.csv'
url_base <- 'http://bonap.net/MapGallery/County/'
projection_file <- 'H:/Projects/MOBI/BONAP/bonap_projection'
et_download <- read.csv(et)
gnames <- et_download$GNAME
View(et_download)
not_downloaded <- data.frame(species=character())
for(g in gnames){
u <- paste(paste0(url_base, g), "png", sep=".")
u <- gsub(' ','%20',u)
if(url.exists(u)==TRUE){
download.file(u, paste0(paste(image_folder,g, sep='/'),".tif"), mode='wb')
}
else{
print(paste0(g, " was not available for download"))
nd <- data.frame(species=g)
not_downloaded <- rbind(not_downloaded, nd)
}
}
# install and load necessary packages
if (!requireNamespace("arcgisbinding", quietly=TRUE)) install.packages("arcgisbinding")
require(arcgisbinding)
if (!requireNamespace("raster", quietly=TRUE)) install.packages("raster")
require(raster)
if (!requireNamespace("sf", quietly=TRUE)) install.packages("sf")
require(sf)
if (!requireNamespace("dplyr", quietly=TRUE)) install.packages("dplyr")
require(dplyr)
if (!requireNamespace("RCurl", quietly=TRUE)) install.packages("RCurl")
require(RCurl)
if (!requireNamespace("data.table", quietly=TRUE)) install.packages("data.table")
require(data.table)
if (!requireNamespace("rgdal", quietly=TRUE)) install.packages("rgdal")
require(rgdal)
# set path to bonap image folder, image geodatabase, county centroids.
image_folder <- 'H:/Projects/MOBI/BONAP/bonap_originals'
image_gdb <- 'H:/Projects/MOBI/BONAP/bonap_rasters.gdb'
county_centroids <- 'H:/Projects/MOBI/BONAP/bonap.gdb/county_centroids'
et <- 'H:/Projects/MOBI/BONAP/PLANT_LIST_MOBI_JULY2018.csv'
url_base <- 'http://bonap.net/MapGallery/County/'
projection_file <- 'H:/Projects/MOBI/BONAP/bonap_projection'
et_download <- read.csv(et)
gnames <- et_download$GNAME
not_downloaded <- data.frame(species=character())
for(g in gnames){
u <- paste(paste0(url_base, g), "png", sep=".")
u <- gsub(' ','%20',u)
if(url.exists(u)==TRUE){
download.file(u, paste0(paste(image_folder,g, sep='/'),".tif"), mode='wb')
}
else{
print(paste0(g, " was not available for download"))
nd <- data.frame(species=g)
not_downloaded <- rbind(not_downloaded, nd)
}
}
not_down <- 'H:/Projects/MOBI/BONAP/maps_not_downloaded.csv'
write.csv(not_downloaded, not_down)
# set path to bonap image folder, image geodatabase, county centroids.
image_folder <- 'H:/Projects/MOBI/BONAP/bonap_originals'
image_gdb <- 'H:/Projects/MOBI/BONAP/bonap_rasters.gdb'
county_centroids <- 'H:/Projects/MOBI/BONAP/bonap.gdb/county_centroids'
et <- 'H:/Projects/MOBI/BONAP/PLANT_LIST_MOBI_JULY2018_secondpass.csv'
url_base <- 'http://bonap.net/MapGallery/County/'
projection_file <- 'H:/Projects/MOBI/BONAP/bonap_projection'
et_download <- read.csv(et)
gnames <- et_download$GNAME
not_downloaded <- data.frame(species=character())
for(g in gnames){
u <- paste(paste0(url_base, g), "png", sep=".")
u <- gsub(' ','%20',u)
if(url.exists(u)==TRUE){
download.file(u, paste0(paste(image_folder,g, sep='/'),".tif"), mode='wb')
}
else{
print(paste0(g, " was not available for download"))
nd <- data.frame(species=g)
not_downloaded <- rbind(not_downloaded, nd)
}
}
not_down <- 'H:/Projects/MOBI/BONAP/maps_not_downloaded.csv'
write.csv(not_downloaded, not_down)
# create list of species from file names. sub in underscores and exclude extension to match file name in GDB.
bonap_maps <- list.files(path = image_folder, pattern='\\.tif$')
bonap_maps <- gsub('\\.tif$', '', bonap_maps)
for(s in bonap_maps){
file.copy(paste0(projection_file,".tfwx"), paste0(image_folder,"/",s,".tfwx"), overwrite=TRUE)
file.copy(paste0(projection_file,".tif.aux.xml"), paste0(image_folder,"/",s,".tif.aux.xml"), overwrite=TRUE)
file.copy(paste0(projection_file,".tif.xml"), paste0(image_folder,"/",s,".tif.xml"), overwrite=TRUE)
}
et <- 'H:/Projects/MOBI/BONAP/PLANT_LIST_MOBI_JULY2018_thirdpass.csv'
et_download <- read.csv(et)
gnames <- et_download$GNAME
not_downloaded <- data.frame(species=character())
for(g in gnames){
u <- paste(paste0(url_base, g), "png", sep=".")
u <- gsub(' ','%20',u)
if(url.exists(u)==TRUE){
download.file(u, paste0(paste(image_folder,g, sep='/'),".tif"), mode='wb')
}
else{
print(paste0(g, " was not available for download"))
nd <- data.frame(species=g)
not_downloaded <- rbind(not_downloaded, nd)
}
}
not_down <- 'H:/Projects/MOBI/BONAP/maps_not_downloaded.csv'
write.csv(not_downloaded, not_down)
# create list of species from file names. sub in underscores and exclude extension to match file name in GDB.
bonap_maps <- list.files(path = image_folder, pattern='\\.tif$')
bonap_maps <- gsub('\\.tif$', '', bonap_maps)
for(s in bonap_maps){
file.copy(paste0(projection_file,".tfwx"), paste0(image_folder,"/",s,".tfwx"), overwrite=TRUE)
file.copy(paste0(projection_file,".tif.aux.xml"), paste0(image_folder,"/",s,".tif.aux.xml"), overwrite=TRUE)
file.copy(paste0(projection_file,".tif.xml"), paste0(image_folder,"/",s,".tif.xml"), overwrite=TRUE)
}
# install and load necessary packages
if (!requireNamespace("arcgisbinding", quietly=TRUE)) install.packages("arcgisbinding")
require(arcgisbinding)
if (!requireNamespace("raster", quietly=TRUE)) install.packages("raster")
require(raster)
if (!requireNamespace("sf", quietly=TRUE)) install.packages("sf")
require(sf)
if (!requireNamespace("dplyr", quietly=TRUE)) install.packages("dplyr")
require(dplyr)
if (!requireNamespace("RCurl", quietly=TRUE)) install.packages("RCurl")
require(RCurl)
if (!requireNamespace("data.table", quietly=TRUE)) install.packages("data.table")
require(data.table)
if (!requireNamespace("rgdal", quietly=TRUE)) install.packages("rgdal")
require(rgdal)
# set path to bonap image folder, image geodatabase, county centroids.
image_folder <- 'H:/Projects/MOBI/BONAP/bonap_originals'
image_gdb <- 'H:/Projects/MOBI/BONAP/bonap_rasters.gdb'
county_centroids <- 'H:/Projects/MOBI/BONAP/bonap.gdb/county_centroids'
#####################################################################################################################
## Color Getting ####################################################################################################
#####################################################################################################################
# print start time for color loop
print(paste0("color gettin': ", Sys.time()))
# open r-arc connection, load county centroid layer and change to sp
arc.check_product()
counties <- arc.open(county_centroids)
county_tbl <- arc.select(counties)
counties_shape <- arc.data2sp(county_tbl)
bonap_maps <- gsub(' ', '_', bonap_maps)
bonap_maps <- gsub('-', '_', bonap_maps)
bonap_maps <- gsub('var.', 'var', bonap_maps, fixed=TRUE)
bonap_maps <- gsub('ssp.', 'ssp', bonap_maps, fixed=TRUE)
# start loop
for(bonap in bonap_maps){
print(paste0("color gettin' for: ", bonap))
# load in species raster from GDB
map <- arc.open(paste(image_gdb,bonap,sep="/"))
map <- arc.raster(map)
map <- as.raster(map)
#map <- readGDAL(paste0(image_folder,"/",bonap,".tif"))
#crs(map) <- "+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs"
#extent(map) <- extent(-2375340, 3008685, -2562062, 742518)
# extract RGB values to county centroid points
result <- extract(map, counties_shape)
merge <- cbind(county_tbl, result)
# create column and fill with species presence value based on RGB values
merge$bonap <- ifelse(merge$Band_1 == 173 & merge$Band_2 == 142 & merge$Band_3 == 0, 'SNP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 128 & merge$Band_3 == 0, 'SP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PNR',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PR',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 0 & merge$Band_3 == 235, 'SPE',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 255, 'PE',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 0 & merge$Band_3 == 255, 'NOX',
ifelse(merge$Band_1 == 66 & merge$Band_2 == 66 & merge$Band_3 == 66, 'RAD',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 221 & merge$Band_3 == 145, 'SNA',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 165 & merge$Band_3 == 0, 'EXT', 'color not found'
))))))))))
# change column name and join to country table
colnames(merge)[colnames(merge)=='bonap'] <- bonap
county_tbl <- cbind(county_tbl, merge[ncol(merge)])
}
# print end time for color getter
print(paste0("color gettin' finished: ", Sys.time()))
# write bonap species presence data to .csv and geodatabase table
out_bonap <- 'W:/Heritage/Heritage_Projects/1495_PlantConservationPlan/bonap/bonap_data.csv'
write.csv(county_tbl, out_bonap)
#####################################################################################################################
## Color Getting ####################################################################################################
#####################################################################################################################
# print start time for color loop
print(paste0("color gettin': ", Sys.time()))
# open r-arc connection, load county centroid layer and change to sp
arc.check_product()
counties <- arc.open(county_centroids)
county_tbl <- arc.select(counties)
counties_shape <- arc.data2sp(county_tbl)
bonap_maps <- gsub(' ', '_', bonap_maps)
bonap_maps <- gsub('-', '_', bonap_maps)
bonap_maps <- gsub('var.', 'var', bonap_maps, fixed=TRUE)
bonap_maps <- gsub('ssp.', 'ssp', bonap_maps, fixed=TRUE)
# start loop
for(bonap in bonap_maps){
print(paste0("color gettin' for: ", bonap))
# load in species raster from GDB
map <- arc.open(paste(image_gdb,bonap,sep="/"))
map <- arc.raster(map)
map <- as.raster(map)
#map <- readGDAL(paste0(image_folder,"/",bonap,".tif"))
#crs(map) <- "+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs"
#extent(map) <- extent(-2375340, 3008685, -2562062, 742518)
# extract RGB values to county centroid points
result <- extract(map, counties_shape)
merge <- cbind(county_tbl, result)
# create column and fill with species presence value based on RGB values
merge$bonap <- ifelse(merge$Band_1 == 173 & merge$Band_2 == 142 & merge$Band_3 == 0, 'SNP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 128 & merge$Band_3 == 0, 'SP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PNR',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PR',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 0 & merge$Band_3 == 235, 'SPE',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 255, 'PE',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 0 & merge$Band_3 == 255, 'NOX',
ifelse(merge$Band_1 == 66 & merge$Band_2 == 66 & merge$Band_3 == 66, 'RAD',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 221 & merge$Band_3 == 145, 'SNA',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 165 & merge$Band_3 == 0, 'EXT', 'color not found'
))))))))))
# change column name and join to country table
colnames(merge)[colnames(merge)=='bonap'] <- bonap
county_tbl <- cbind(county_tbl, merge[ncol(merge)])
}
#####################################################################################################################
## Color Getting ####################################################################################################
#####################################################################################################################
# print start time for color loop
print(paste0("color gettin': ", Sys.time()))
# open r-arc connection, load county centroid layer and change to sp
arc.check_product()
counties <- arc.open(county_centroids)
county_tbl <- arc.select(counties)
counties_shape <- arc.data2sp(county_tbl)
bonap_maps <- gsub(' ', '_', bonap_maps)
bonap_maps <- gsub('-', '_', bonap_maps)
bonap_maps <- gsub('var.', 'var', bonap_maps, fixed=TRUE)
bonap_maps <- gsub('ssp.', 'ssp', bonap_maps, fixed=TRUE)
# start loop
for(bonap in bonap_maps){
print(paste0("color gettin' for: ", bonap))
# load in species raster from GDB
map <- arc.open(paste(image_gdb,bonap,sep="/"))
map <- arc.raster(map)
map <- as.raster(map)
#map <- readGDAL(paste0(image_folder,"/",bonap,".tif"))
#crs(map) <- "+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs"
#extent(map) <- extent(-2375340, 3008685, -2562062, 742518)
# extract RGB values to county centroid points
result <- extract(map, counties_shape)
merge <- cbind(county_tbl, result)
# create column and fill with species presence value based on RGB values
merge$bonap <- ifelse(merge$Band_1 == 173 & merge$Band_2 == 142 & merge$Band_3 == 0, 'SNP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 128 & merge$Band_3 == 0, 'SP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PNR',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PR',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 0 & merge$Band_3 == 235, 'SPE',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 255, 'PE',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 0 & merge$Band_3 == 255, 'NOX',
ifelse(merge$Band_1 == 66 & merge$Band_2 == 66 & merge$Band_3 == 66, 'RAD',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 221 & merge$Band_3 == 145, 'SNA',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 165 & merge$Band_3 == 0, 'EXT', 'color not found'
))))))))))
# change column name and join to country table
colnames(merge)[colnames(merge)=='bonap'] <- bonap
county_tbl <- cbind(county_tbl, merge[ncol(merge)])
}
# print end time for color getter
print(paste0("color gettin' finished: ", Sys.time()))
# write bonap species presence data to .csv and geodatabase table
out_bonap <- 'H:/Projects/MOBI/bonap_data.csv'
write.csv(county_tbl, out_bonap)
#####################################################################################################################
## Color Getting ####################################################################################################
#####################################################################################################################
# print start time for color loop
print(paste0("color gettin': ", Sys.time()))
# open r-arc connection, load county centroid layer and change to sp
arc.check_product()
counties <- arc.open(county_centroids)
county_tbl <- arc.select(counties)
counties_shape <- arc.data2sp(county_tbl)
bonap_maps <- gsub(' ', '_', bonap_maps)
bonap_maps <- gsub('-', '_', bonap_maps)
bonap_maps <- gsub('var.', 'var', bonap_maps, fixed=TRUE)
bonap_maps <- gsub('ssp.', 'ssp', bonap_maps, fixed=TRUE)
# start loop
for(bonap in bonap_maps){
print(paste0("color gettin' for: ", bonap))
# load in species raster from GDB
map <- arc.open(paste(image_gdb,bonap,sep="/"))
map <- arc.raster(map)
map <- as.raster(map)
#map <- readGDAL(paste0(image_folder,"/",bonap,".tif"))
#crs(map) <- "+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs"
#extent(map) <- extent(-2375340, 3008685, -2562062, 742518)
# extract RGB values to county centroid points
result <- extract(map, counties_shape)
merge <- cbind(county_tbl, result)
# create column and fill with species presence value based on RGB values
merge$bonap <- ifelse(merge$Band_1 == 173 & merge$Band_2 == 142 & merge$Band_3 == 0, 'SNP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 128 & merge$Band_3 == 0, 'SP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PNR',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PR',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 0 & merge$Band_3 == 235, 'SPE',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 255, 'PE',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 0 & merge$Band_3 == 255, 'NOX',
ifelse(merge$Band_1 == 66 & merge$Band_2 == 66 & merge$Band_3 == 66, 'RAD',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 221 & merge$Band_3 == 145, 'SNA',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 165 & merge$Band_3 == 0, 'EXT', 'color not found'
))))))))))
# change column name and join to country table
colnames(merge)[colnames(merge)=='bonap'] <- bonap
county_tbl <- cbind(county_tbl, merge[ncol(merge)])
}
# print end time for color getter
print(paste0("color gettin' finished: ", Sys.time()))
# write bonap species presence data to .csv and geodatabase table
out_bonap <- 'H:/Projects/MOBI/bonap_data.csv'
write.csv(county_tbl, out_bonap)
#####################################################################################################################
## Color Getting ####################################################################################################
#####################################################################################################################
# print start time for color loop
print(paste0("color gettin': ", Sys.time()))
# open r-arc connection, load county centroid layer and change to sp
arc.check_product()
counties <- arc.open(county_centroids)
county_tbl <- arc.select(counties)
counties_shape <- arc.data2sp(county_tbl)
bonap_maps <- gsub(' ', '_', bonap_maps)
bonap_maps <- gsub('-', '_', bonap_maps)
bonap_maps <- gsub('var.', 'var', bonap_maps, fixed=TRUE)
bonap_maps <- gsub('ssp.', 'ssp', bonap_maps, fixed=TRUE)
# start loop
for(bonap in bonap_maps){
print(paste0("color gettin' for: ", bonap))
# load in species raster from GDB
map <- arc.open(paste(image_gdb,bonap,sep="/"))
map <- arc.raster(map)
map <- as.raster(map)
#map <- readGDAL(paste0(image_folder,"/",bonap,".tif"))
#crs(map) <- "+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs"
#extent(map) <- extent(-2375340, 3008685, -2562062, 742518)
# extract RGB values to county centroid points
result <- extract(map, counties_shape)
merge <- cbind(county_tbl, result)
# create column and fill with species presence value based on RGB values
merge$bonap <- ifelse(merge$Band_1 == 173 & merge$Band_2 == 142 & merge$Band_3 == 0, 'SNP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 128 & merge$Band_3 == 0, 'SP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PNR',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PR',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 0 & merge$Band_3 == 235, 'SPE',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 255, 'PE',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 0 & merge$Band_3 == 255, 'NOX',
ifelse(merge$Band_1 == 66 & merge$Band_2 == 66 & merge$Band_3 == 66, 'RAD',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 221 & merge$Band_3 == 145, 'SNA',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 165 & merge$Band_3 == 0, 'EXT', 'color not found'
))))))))))
# change column name and join to country table
colnames(merge)[colnames(merge)=='bonap'] <- bonap
county_tbl <- cbind(county_tbl, merge[ncol(merge)])
}
# print end time for color getter
print(paste0("color gettin' finished: ", Sys.time()))
# write bonap species presence data to .csv and geodatabase table
out_bonap <- 'H:/Projects/MOBI/bonap_data.csv'
write.csv(county_tbl, out_bonap)
# install and load necessary packages
if (!requireNamespace("arcgisbinding", quietly=TRUE)) install.packages("arcgisbinding")
require(arcgisbinding)
if (!requireNamespace("raster", quietly=TRUE)) install.packages("raster")
require(raster)
if (!requireNamespace("sf", quietly=TRUE)) install.packages("sf")
require(sf)
if (!requireNamespace("dplyr", quietly=TRUE)) install.packages("dplyr")
require(dplyr)
if (!requireNamespace("RCurl", quietly=TRUE)) install.packages("RCurl")
require(RCurl)
if (!requireNamespace("data.table", quietly=TRUE)) install.packages("data.table")
require(data.table)
if (!requireNamespace("rgdal", quietly=TRUE)) install.packages("rgdal")
require(rgdal)
# set path to bonap image folder, image geodatabase, county centroids.
image_folder <- 'W:/Heritage/Heritage_Projects/1495_PlantConservationPlan/bonap/bonap_originals'
image_gdb <- 'W:/Heritage/Heritage_Projects/1495_PlantConservationPlan/bonap/bonap_rasters.gdb'
county_centroids <- 'W:/Heritage/Heritage_Projects/1495_PlantConservationPlan/bonap/bonap.gdb/county_centroids'
et <- 'W:/Heritage/Heritage_Projects/1495_PlantConservationPlan/PCPP_ET_2018.csv'
url_base <- 'http://bonap.net/MapGallery/County/'
projection_file <- 'W:/Heritage/Heritage_Projects/1495_PlantConservationPlan/BONAP/bonap_projection'
# print start time for color loop
print(paste0("color gettin': ", Sys.time()))
# open r-arc connection, load county centroid layer and change to sp
arc.check_product()
counties <- arc.open(county_centroids)
county_tbl <- arc.select(counties)
counties_shape <- arc.data2sp(county_tbl)
bonap_maps <- gsub(' ', '_', bonap_maps)
bonap_maps <- gsub('-', '_', bonap_maps)
bonap_maps <- gsub('var.', 'var', bonap_maps, fixed=TRUE)
bonap_maps <- gsub('ssp.', 'ssp', bonap_maps, fixed=TRUE)
# start loop
for(bonap in bonap_maps){
# load in species raster from GDB
map <- arc.open(paste(image_gdb,bonap,sep="/"))
map <- arc.raster(map)
map <- as.raster(map)
#map <- readGDAL(paste0(image_folder,"/",bonap,".tif"))
#crs(map) <- "+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs"
#extent(map) <- extent(-2375340, 3008685, -2562062, 742518)
# extract RGB values to county centroid points
result <- extract(map, counties_shape)
merge <- cbind(county_tbl, result)
# create column and fill with species presence value based on RGB values
merge$bonap <- ifelse(merge$Band_1 == 173 & merge$Band_2 == 142 & merge$Band_3 == 0, 'SNP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 128 & merge$Band_3 == 0, 'SP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PNR',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PR',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 0 & merge$Band_3 == 235, 'SPE',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 255, 'PE',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 0 & merge$Band_3 == 255, 'NOX',
ifelse(merge$Band_1 == 66 & merge$Band_2 == 66 & merge$Band_3 == 66, 'RAD',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 221 & merge$Band_3 == 145, 'SNA',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 165 & merge$Band_3 == 0, 'EXT', 'color not found'
))))))))))
# change column name and join to country table
colnames(merge)[colnames(merge)=='bonap'] <- bonap
county_tbl <- cbind(county_tbl, merge[ncol(merge)])
}
# print end time for color getter
print(paste0("color gettin' finished: ", Sys.time()))
# write bonap species presence data to .csv and geodatabase table
out_bonap <- 'W:/Heritage/Heritage_Projects/1495_PlantConservationPlan/bonap/bonap_data.csv'
write.csv(county_tbl, out_bonap)
# create list of species from file names. sub in underscores and exclude extension to match file name in GDB.
bonap_maps <- list.files(path = image_folder, pattern='\\.tif$')
bonap_maps <- gsub('\\.tif$', '', bonap_maps)
for(s in bonap_maps){
file.copy(paste0(projection_file,".tfwx"), paste0(image_folder,"/",s,".tfwx"), overwrite=TRUE)
file.copy(paste0(projection_file,".tif.aux.xml"), paste0(image_folder,"/",s,".tif.aux.xml"), overwrite=TRUE)
file.copy(paste0(projection_file,".tif.xml"), paste0(image_folder,"/",s,".tif.xml"), overwrite=TRUE)
}
# print start time for color loop
print(paste0("color gettin': ", Sys.time()))
# open r-arc connection, load county centroid layer and change to sp
arc.check_product()
counties <- arc.open(county_centroids)
county_tbl <- arc.select(counties)
counties_shape <- arc.data2sp(county_tbl)
bonap_maps <- gsub(' ', '_', bonap_maps)
bonap_maps <- gsub('-', '_', bonap_maps)
bonap_maps <- gsub('var.', 'var', bonap_maps, fixed=TRUE)
bonap_maps <- gsub('ssp.', 'ssp', bonap_maps, fixed=TRUE)
# start loop
for(bonap in bonap_maps){
# load in species raster from GDB
map <- arc.open(paste(image_gdb,bonap,sep="/"))
map <- arc.raster(map)
map <- as.raster(map)
#map <- readGDAL(paste0(image_folder,"/",bonap,".tif"))
#crs(map) <- "+proj=laea +lat_0=45 +lon_0=-100 +x_0=0 +y_0=0 +a=6370997 +b=6370997 +units=m +no_defs"
#extent(map) <- extent(-2375340, 3008685, -2562062, 742518)
# extract RGB values to county centroid points
result <- extract(map, counties_shape)
merge <- cbind(county_tbl, result)
# create column and fill with species presence value based on RGB values
merge$bonap <- ifelse(merge$Band_1 == 173 & merge$Band_2 == 142 & merge$Band_3 == 0, 'SNP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 128 & merge$Band_3 == 0, 'SP',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PNR',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 255 & merge$Band_3 == 0, 'PR',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 0 & merge$Band_3 == 235, 'SPE',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 255 & merge$Band_3 == 255, 'PE',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 0 & merge$Band_3 == 255, 'NOX',
ifelse(merge$Band_1 == 66 & merge$Band_2 == 66 & merge$Band_3 == 66, 'RAD',
ifelse(merge$Band_1 == 0 & merge$Band_2 == 221 & merge$Band_3 == 145, 'SNA',
ifelse(merge$Band_1 == 255 & merge$Band_2 == 165 & merge$Band_3 == 0, 'EXT', 'color not found'
))))))))))
# change column name and join to country table
colnames(merge)[colnames(merge)=='bonap'] <- bonap
county_tbl <- cbind(county_tbl, merge[ncol(merge)])
}
# print end time for color getter
print(paste0("color gettin' finished: ", Sys.time()))
# write bonap species presence data to .csv and geodatabase table
out_bonap <- 'W:/Heritage/Heritage_Projects/1495_PlantConservationPlan/bonap/bonap_data.csv'
write.csv(county_tbl, out_bonap)
